version: '3.8'

services:
  # Redis for caching and real-time data
  redis:
    image: redis:7-alpine
    container_name: health-dashboard-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - health-dashboard

  # Backend API and WebSocket server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: health-dashboard-backend
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - PORT=3002
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - health-dashboard
    volumes:
      - ./backend/logs:/app/logs

  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: health-dashboard-frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://backend:3002
      - REACT_APP_WEBSOCKET_URL=ws://backend:3002
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - health-dashboard

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: health-dashboard-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - health-dashboard
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  health-dashboard:
    driver: bridge